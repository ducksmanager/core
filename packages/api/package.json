{
  "name": "~api",
  "engines": {
    "node": ">=22.0.0 <23.0.0"
  },
  "version": "1.0.0",
  "scripts": {
    "build": "for name in index index-story-search; do bun build ${name}.ts --entry-naming ${name}.mjs --target node --sourcemap=linked --outdir dist || exit 1; done && for file in scripts/*.ts; do bun build $file --entry-naming scripts/[name].mjs --target node --sourcemap=linked --outdir dist || exit 1; done && pnpm sentry:sourcemaps",
    "dev:blocking-up": "wait-on -l tcp:3001",
    "dev": "docker compose -f docker-compose-dev.yml up -d && docker compose -f docker-compose-dev.yml logs -f --since 1h",
    "dev:bun": "concurrently --kill-others-on-fail -n index,story-search \"bun --inspect run index.ts\" \"bun --inspect run index-story-search.ts\"",
    "lint": "eslint --fix .",
    "nodemon-watch": "bun --inspect run --watch index.ts",
    "prod:deploy": "DIR=packages/api SERVICES='api api-websocket api-story-search' pnpm -F '~ci' prod:docker-compose-up",
    "prod:docker-compose-run-create-issues-from-subscriptions": "DIR=packages/api COMMAND=\"exec api-websocket node ./scripts/create-issues-from-subscriptions.mjs\" pnpm -F '~ci' prod:docker-compose-command",
    "prod:build-docker": "REPO_NAME=ghcr.io/bperel/ducksmanager-api:websocket pnpm -F '~ci' prod:build-docker --target api -f packages/api/Dockerfile & REPO_NAME=ghcr.io/bperel/ducksmanager-api:story-search pnpm -F '~ci' prod:build-docker --target api-story-search -f packages/api/Dockerfile",
    "prod:transfer-files-pre": "pnpm -F '~ci' prod:transfer-files @packages/api/.env:packages/api/.env @packages/prisma-schemas/.env:packages/prisma-schemas/.env",
    "prod:transfer-files-post": "pnpm -F '~ci' prod:transfer-files packages/api/docker-compose.yml:@packages/api/docker-compose.yml packages/api/Caddyfile:@packages/api/Caddyfile",
    "sentry:sourcemaps": "sentry-cli sourcemaps inject --org bruno-perel --project dm-api ./dist && sentry-cli sourcemaps upload --org bruno-perel --project dm-api ./dist"
  },
  "dependencies": {
    "@huggingface/transformers": "~3.5.2",
    "@opentelemetry/instrumentation-socket.io": "^0.46.1",
    "@pusher/push-notifications-server": "^1.2.7",
    "@sentry/node": "^9.33.0",
    "@socket.io/admin-ui": "^0.5.1",
    "@tensorflow-models/mobilenet": "^2.1.1",
    "@tensorflow/tfjs-node": "^4.22.0",
    "axios": "^1.10.0",
    "cloudinary": "^1.41.3",
    "csv-parse": "^5.6.0",
    "dayjs": "^1.11.13",
    "dotenv": "^16.6.1",
    "ejs": "^3.1.10",
    "i18n": "^0.15.1",
    "jsonwebtoken": "^9.0.2",
    "nodemailer": "^7.0.4",
    "sharp": "0.33.5",
    "sharp-0-34": "npm:sharp@^0.34.2",
    "socket-call-server": "^0.7.5",
    "socket.io": "^4.8.1",
    "~dm-types": "workspace:*",
    "~prisma-schemas": "workspace:*"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.30.0",
    "@sentry/cli": "^2.46.0",
    "@types/ejs": "^3.1.5",
    "@types/i18n": "^0.13.12",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node": "^22.15.34",
    "@types/nodemailer": "^6.4.17",
    "@typescript-eslint/eslint-plugin": "^8.35.1",
    "concurrently": "^9.2.0",
    "eslint": "^9.30.1",
    "eslint-config-prettier": "^10.1.5",
    "nodemon": "^3.1.10",
    "typescript": "^5.8.3",
    "wait-on": "^8.0.3"
  }
}