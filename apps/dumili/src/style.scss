@use "sass:color";

textarea::placeholder {
  color: black !important;
}

.opacity-100-hover:hover {
  opacity: 1 !important;
}

.cursor-move {
  cursor: move;
}

.cursor-pointer {
  cursor: pointer;
}

.col > .dropdown {
  max-width: calc(100% - 40px);
}

.z-4 {
  z-index: 4 !important;
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.outline {
  outline: 1px solid black;
}

:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

html,
body {
  margin: 0;
  height: 100%;
  font:
    11px verdana,
    arial,
    sans-serif;
  line-height: 15px;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

.dropdown-toggle {
  display: flex !important;
  align-items: center;
}

.card {
  padding: 2em;
}

.white-space-normal {
  white-space: normal;
}

#app {
  margin: 0 auto;
  text-align: center;

  background: inherit;
  .position-fixed {
    background: var(--bs-body-bg);
  }
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

.translucent {
  border: 2px solid rgba(0, 0, 0, 0.2);
  box-shadow: inset 0px 0px 10px 10px white;
}

.ocr-match {
  background-color: rgba(255, 255, 255, 0.5);
  color: black;
}

@mixin storyKindBackground($bg) {
  background-color: $bg !important;
  color: color.invert($bg);

  &.striped {
    background-color: transparent !important;
    background: repeating-linear-gradient(
      -45deg,
      rgba($bg, 0.8),
      rgba($bg, 0.8) 1px,
      transparent 1px,
      transparent 10px
    );
  }
  &.btn:hover {
    background-color: color.adjust($bg, $lightness: 5%) !important;
    color: color.invert(color.adjust($bg, $lightness: 5%));
  }
}

$storyKinds: (
  /* STORY */ "n": #cbdced,
  /* NEWSPAPER_STRIP */ "k": #ff99ff,
  /* COVER */ "c": #ffcc33,
  /* ILLUSTRATION */ "i": #ffcc33,
  /* GAME_OR_PUZZLE */ "g": #ffcc33,
  /* TEXT_STORY */ "t": #ffcc33,
  /* ARTICLE */ "a": #cccc99,
  /* PAINTING_PORTRAIT */ "P": #ffcc33,
  /* PAINTING_LANDSCAPE */ "L": #ffcc33,
  /* CENTERFOLD */ "f": #ffcc33
);

*[class^="kind-"],
*[class*=" kind-"] {
  @include storyKindBackground(#cccccc);
}

@each $storyKind, $storyversionColor in $storyKinds {
  .kind-#{$storyKind} {
    @include storyKindBackground($storyversionColor);
  }
}
