name: deploy-duckguessr

on:
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Check out repository
        uses: actions/checkout@master

      - name: Download .env file
        uses: nicklasfrahm/scp-action@main
        with:
          direction: download
          host: ${{ secrets.PRODUCTION_SSH_HOST }}
          fingerprint: ${{ secrets.PRODUCTION_SSH_FINGERPRINT }}
          username: ${{ secrets.PRODUCTION_SSH_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          source: /home/bperel/workspace/duckguessr/.env.prod
          target: .env.prod

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: bperel
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Build and push web runtime
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/x86_64
          push: true
          target: runtime-nuxt
          tags: |
            ghcr.io/bperel/duckguessr-web:latest

      - name: Build and push socket runtime
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/x86_64
          push: true
          target: runtime-socketio
          tags: |
            ghcr.io/bperel/duckguessr-socketio:latest

      - name: Recreate container
        uses: appleboy/ssh-action@v0.1.4
        env:
          DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
        with:
          host: ${{ secrets.PRODUCTION_SSH_HOST }}
          username: ${{ secrets.PRODUCTION_SSH_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          command_timeout: 2m
          envs: DOCKER_REGISTRY_TOKEN
          script: |
            cd workspace/duckguessr
            echo $DOCKER_REGISTRY_TOKEN | docker login ghcr.io -u bperel --password-stdin
            docker-compose pull && docker-compose up -d --force-recreate
